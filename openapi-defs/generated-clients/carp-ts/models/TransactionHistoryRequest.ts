/**
 * carp
 * API for the Postgres database generated by Carp
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Address } from './Address';
import { BlockTxPair } from './BlockTxPair';
import { Pagination } from './Pagination';
import { TransactionHistoryRequestAllOf } from './TransactionHistoryRequestAllOf';
import { HttpFile } from '../http/http';

export class TransactionHistoryRequest {
    /**
    * Defaults to `ADDRESS_LIMIT.RESPONSE`
    */
    'limit'?: number;
    /**
    * Filter which uses of the address are considered relevant for the query.  This is a bitmask, so you can combine multiple options ex: `RelationFilterType.Input & RelationFilterType.Output`  Note: relations only apply to credentials and not to full bech32 addresses
    */
    'relationFilter'?: number;
    'addresses': Array<Address>;
    'after'?: BlockTxPair;
    /**
    * block hash - inclusive
    */
    'untilBlock': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "limit",
            "baseName": "limit",
            "type": "number",
            "format": "double"
        },
        {
            "name": "relationFilter",
            "baseName": "relationFilter",
            "type": "number",
            "format": "double"
        },
        {
            "name": "addresses",
            "baseName": "addresses",
            "type": "Array<Address>",
            "format": ""
        },
        {
            "name": "after",
            "baseName": "after",
            "type": "BlockTxPair",
            "format": ""
        },
        {
            "name": "untilBlock",
            "baseName": "untilBlock",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TransactionHistoryRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

